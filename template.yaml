AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM Template for emojify-sam

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
  Api:
    Cors:
      AllowMethods: "'OPTIONS,POST'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Parameters:
  HostedZoneName:
    Type: String
    Default: example.com.
    Description: "The Route 53 Hosted zone domain name that record changes should be registered with"
  DomainName:
    Type: String
    Default: api.example.com
    Description: "The subdomain to register resources with on the project's Hosted zone"
  CertificateArn:
    Type: String
    Default: arn:aws:acm:us-east-1:...:certificate/...
    Description: The ARN for a valid AWS certificate from the "AWS Certicate Manager""
  EnableDiscordResources:
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    Description: "If true Discord resources are included with deploy"
  DiscordPublicKey:
    Type: String
    Default: <CAN-BE-LEFT-AS-IS-IF-DISCORD-RESOURCES-ARE-DISABLED>
    Description: "The Discord public key for the bot that will hit the Emojify Discord endpoint"

Conditions:
  EnableDiscordResources: !Equals
    - !Ref EnableDiscordResources
    - 'true'

Resources:
  EmojifyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: emojify/cmd/emojify
      Handler: main
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        HttpPost:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /emojify
            Method: post

  EmojifyDiscordFunction:
    Condition: EnableDiscordResources
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: emojify/cmd/discord
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        HttpPost:
          Type: Api
          Properties:
            Path: /discord
            Method: post
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          DISCORD_PUBLIC_KEY: !Ref DiscordPublicKey

  APIDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref CertificateArn
      DomainName: !Ref DomainName

  APIBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref APIDomainName
      RestApiId: !Ref ServerlessRestApi
      Stage: Prod

  APIDomain:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Ref HostedZoneName
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            DNSName: !GetAtt APIDomainName.DistributionDomainName
            HostedZoneId: Z2FDTNDATAQYW2 # static ID for CloudFront aliases

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  EmojifyAPI:
    Description: "API Gateway endpoint URL for Prod environment for Emojify resources"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/emojify/"
  EmojifyFunction:
    Description: "Emojify Lambda function ARN"
    Value: !GetAtt EmojifyFunction.Arn
  EmojifyFunctionIamRole:
    Description: "Implicit IAM Role created for Emojfiy function"
    Value: !GetAtt EmojifyFunctionRole.Arn
  EmojifyDiscordFunction:
    Description: "Emojify Discord Lambda function ARN"
    Value: !GetAtt EmojifyDiscordFunction.Arn
    Condition: EnableDiscordResources
  EmojifyDiscordFunctionIamRole:
    Description: "Implicit IAM Role created for Emojify Discord function"
    Value: !GetAtt EmojifyDiscordFunctionRole.Arn
    Condition: EnableDiscordResources
